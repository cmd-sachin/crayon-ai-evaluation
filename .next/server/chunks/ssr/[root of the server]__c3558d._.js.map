{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/DELL/Desktop/AI_ASSISTANT/sachin-crayon-d/Gen%20Ai%20Hackathon/task-evaluation-platform/src/app/quizPage/page.js"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardFooter,\n  Progress,\n  Textarea,\n  Chip,\n  Radio,\n  RadioGroup,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Spinner,\n  Slider,\n  Tooltip,\n} from \"@nextui-org/react\";\nimport {\n  Clock,\n  AlertCircle,\n  ArrowRight,\n  Info,\n  BrainCircuit,\n  Award,\n  RefreshCw,\n  Lightbulb,\n  Sparkles,\n  HelpCircle,\n  ListChecks,\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport { useRouter } from \"next/navigation\";\nimport confetti from \"canvas-confetti\";\nimport { useQuizStore } from \"../app/stores/quizStore\";\nimport { useFileStore } from \"../app/stores/zipCodeStore\";\nimport { useQuizHistory } from \"../app/stores/quizHistory\";\n\n// Constants\nconst TOTAL_QUESTIONS = 13;\nconst DEFAULT_TIMER_SECONDS = 10;\n\n// Section colors mapping\nconst SECTION_COLORS = {\n  \"Task Complexity Assessment\": \"primary\",\n  \"Challenges & Solutions\": \"secondary\",\n  \"AI Assistance & Usage\": \"success\",\n  \"Technical Assessment\": \"warning\",\n};\n\n// Helper: Returns an icon based on the question section.\nconst SectionIcon = ({ section, size }) => {\n  switch (section) {\n    case \"Task Complexity Assessment\":\n      return <BrainCircuit size={size} />;\n    case \"Challenges & Solutions\":\n      return <Award size={size} />;\n    case \"AI Assistance & Usage\":\n      return <Sparkles size={size} />;\n    case \"Technical Assessment\":\n      return <Lightbulb size={size} />;\n    default:\n      return <Info size={size} />;\n  }\n};\n\n// Updated static questions with discrete slider values.\nconst staticQuestions = [\n  {\n    section: \"Task Complexity Assessment\",\n    question: \"How challenging was this task for you? (Scale 1-5)\",\n    inputType: \"slider\",\n    min: 1,\n    max: 100,\n    step: 1,\n    defaultValue: 0,\n    valueToLabel: (value) => {\n      if (value <= 20) return \"Very Easy\";\n      if (value <= 40) return \"Easy\";\n      if (value <= 60) return \"Moderate\";\n      if (value <= 80) return \"Challenging\";\n      if (value > 80) return \"Very Challenging\";\n      return null;\n    },\n    labelMapping: [\n      { label: \"Very Easy\", min: 1, max: 20 },\n      { label: \"Easy\", min: 21, max: 40 },\n      { label: \"Moderate\", min: 41, max: 60 },\n      { label: \"Challenging\", min: 61, max: 80 },\n      { label: \"Very Challenging\", min: 81, max: 100 },\n    ],\n    required: true,\n  },\n  {\n    section: \"Task Complexity Assessment\",\n    question: \"Which aspects were most complex?\",\n    inputType: \"text\",\n    placeholder: \"Describe the most complex aspects of this task...\",\n    required: true,\n  },\n  {\n    section: \"Task Complexity Assessment\",\n    question: \"What prior experience helped you?\",\n    inputType: \"text\",\n    placeholder: \"Share any relevant prior experience...\",\n    required: true,\n  },\n  {\n    section: \"Challenges & Solutions\",\n    question: \"What were your main technical challenges?\",\n    inputType: \"text\",\n    placeholder: \"Describe the technical challenges you faced...\",\n    required: true,\n  },\n  {\n    section: \"Challenges & Solutions\",\n    question: \"How did you overcome these challenges?\",\n    inputType: \"text\",\n    placeholder: \"Explain your approach to solving these challenges...\",\n    required: true,\n  },\n  {\n    section: \"AI Assistance & Usage\",\n    question:\n      \"Which AI tools did you use during development? (ChatGPT, Gemini, GitHub Copilot, etc.)\",\n    inputType: \"text\",\n    placeholder: \"List the AI tools you used...\",\n    required: true,\n  },\n  {\n    section: \"AI Assistance & Usage\",\n    question: \"How did you leverage these AI tools?\",\n    inputType: \"text\",\n    placeholder:\n      \"Describe how you used AI tools in your development process...\",\n    required: true,\n  },\n  {\n    section: \"AI Assistance & Usage\",\n    question:\n      \"On a scale of 1-10, how dependent was your solution on AI assistance?\",\n    inputType: \"slider\",\n    min: 1,\n    max: 100,\n    step: 1,\n    defaultValue: 50,\n    valueToLabel: (value) => {\n      const rating = Math.ceil(value / 10);\n      return String(rating);\n    },\n    labelMapping: [\n      { label: \"1\", min: 1, max: 10 },\n      { label: \"2\", min: 11, max: 20 },\n      { label: \"3\", min: 21, max: 30 },\n      { label: \"4\", min: 31, max: 40 },\n      { label: \"5\", min: 41, max: 50 },\n      { label: \"6\", min: 51, max: 60 },\n      { label: \"7\", min: 61, max: 70 },\n      { label: \"8\", min: 71, max: 80 },\n      { label: \"9\", min: 81, max: 90 },\n      { label: \"10\", min: 91, max: 100 },\n    ],\n    required: true,\n  },\n];\n\nexport default function QuizPage() {\n  const router = useRouter();\n  const [sessionId] = useState(() =>\n    Math.random().toString(36).substring(2, 15)\n  );\n  const fileStore = useFileStore();\n\n  // Quiz store state.\n  const {\n    quizData,\n    addQuizData,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    timer,\n    setTimer,\n    clearStore,\n  } = useQuizStore();\n\n  // Quiz history store state.\n  const { quizHistory, addHistoryEntry } = useQuizHistory();\n\n  // Local state variables.\n  const [questions, setQuestions] = useState(staticQuestions);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [textAnswer, setTextAnswer] = useState(\"\");\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [sliderValue, setSliderValue] = useState(null);\n  const [isTimerActive, setIsTimerActive] = useState(true);\n  const [isTimerWarning, setIsTimerWarning] = useState(false);\n  const [validationError, setValidationError] = useState(\"\");\n  const [fadeAnimation, setFadeAnimation] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [hint, setHint] = useState(\"\");\n  const [loadingNextQuestion, setLoadingNextQuestion] = useState(false);\n  const [showReviewModal, setShowReviewModal] = useState(false);\n  const [messages, setMessages] = useState([\n    { role: \"user\", content: JSON.stringify({}) },\n  ]);\n\n  const progressPercentage = useMemo(\n    () => ((currentQuestionIndex + 1) / TOTAL_QUESTIONS) * 100,\n    [currentQuestionIndex]\n  );\n  const currentQuestion = questions[currentQuestionIndex];\n  const isLastQuestion = currentQuestionIndex === TOTAL_QUESTIONS - 1;\n  const isQuestionRequired = currentQuestion?.required !== false;\n  const sectionColor = useMemo(\n    () => SECTION_COLORS[currentQuestion?.section] || \"primary\",\n    [currentQuestion]\n  );\n\n  console.log(\"messages:\", messages);\n  console.log(\"QuizHistory:\", quizHistory);\n\n  const getInputType = useCallback(() => {\n    if (!currentQuestion) return null;\n    return (\n      currentQuestion.inputType ||\n      (currentQuestion.options && currentQuestion.options.length > 0\n        ? \"radio\"\n        : \"text\")\n    );\n  }, [currentQuestion]);\n  const inputType = getInputType();\n\n  useEffect(() => {\n    if (\n      currentQuestion &&\n      inputType === \"slider\" &&\n      currentQuestion.defaultValue !== undefined\n    ) {\n      setSliderValue(currentQuestion.defaultValue);\n    } else {\n      setSliderValue(null);\n    }\n  }, [currentQuestionIndex, currentQuestion, inputType]);\n\n  useEffect(() => {\n    if (isTimerActive) {\n      const intervalId = setInterval(() => {\n        setTimer((prevTimer) => (prevTimer > 0 ? prevTimer - 1 : 0));\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [isTimerActive, setTimer]);\n\n  useEffect(() => {\n    setIsTimerWarning(timer <= 3);\n  }, [timer]);\n\n  useEffect(() => {\n    if (timer === 0) {\n      setIsTimerActive(false);\n      handleNextQuestion(true);\n    }\n  }, [timer]);\n\n  useEffect(() => {\n    setTimer(DEFAULT_TIMER_SECONDS);\n    setIsTimerActive(true);\n    setIsTimerWarning(false);\n    setTextAnswer(\"\");\n    setSelectedOption(\"\");\n    setValidationError(\"\");\n    setShowHint(false);\n    setHint(\"\");\n    setFadeAnimation(true);\n    const timeout = setTimeout(() => {\n      setFadeAnimation(false);\n    }, 300);\n    return () => clearTimeout(timeout);\n  }, [currentQuestionIndex, setTimer]);\n\n  const fetchNextDynamicQuestion = async () => {\n    try {\n      setLoadingNextQuestion(true);\n      console.log(\"Fetching next dynamic question...\");\n      const response = await fetch(\"/api/generateQuestion\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          previousQuestions: questions.map((q) => q.question),\n          sessionId,\n          messages,\n        }),\n      });\n      const data = await response.json();\n      if (!data || !data.question) {\n        throw new Error(\"Invalid question data received from API\");\n      }\n      const newQuestion = {\n        section: data.section || \"Technical Assessment\",\n        question: data.question,\n        inputType: data.inputType || \"text\",\n        placeholder: data.placeholder || \"Type your answer here...\",\n        options: data.options || undefined,\n        min: data.min || 1,\n        max: data.max || 100,\n        step: data.step || 1,\n        defaultValue: data.defaultValue || 50,\n        valueToLabel: data.valueToLabel,\n        labelMapping: data.labelMapping,\n        required: true,\n        hint: data.hint || \"\",\n      };\n      setQuestions((prevQuestions) => [...prevQuestions, newQuestion]);\n      setMessages((prev) => [\n        ...prev,\n        { role: \"assistant\", content: JSON.stringify(data) },\n      ]);\n      setLoadingNextQuestion(false);\n      console.log(\"Dynamic question loaded:\", newQuestion);\n    } catch (err) {\n      console.error(\"Error fetching dynamic question:\", err);\n      setError(`Failed to fetch the next question: ${err.message}`);\n      setLoadingNextQuestion(false);\n    }\n  };\n\n  const getSliderLabel = useCallback(\n    (value) => {\n      if (!currentQuestion || !value) return \"\";\n      if (currentQuestion.valueToLabel)\n        return currentQuestion.valueToLabel(value);\n      if (currentQuestion.labelMapping) {\n        const mappedLabel = currentQuestion.labelMapping.find(\n          (item) => value >= item.min && value <= item.max\n        );\n        return mappedLabel ? mappedLabel.label : \"\";\n      }\n      return value.toString();\n    },\n    [currentQuestion]\n  );\n\n  // Updated renderSliderLabels using flex-1 for each label.\n  const renderSliderLabels = () => {\n    if (!currentQuestion || !currentQuestion.labelMapping) return null;\n    return (\n      <div className=\"flex w-full mt-2\">\n        {currentQuestion.labelMapping.map((item, index) => (\n          <div key={index} className=\"flex-1 text-xs text-gray-600 text-center\">\n            {item.label}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const handleNextQuestion = async (autoSubmit = false) => {\n    if (!autoSubmit && !validateAnswer()) return;\n    setValidationError(\"\");\n    const currentAnswer = getCurrentAnswer();\n    addQuizData(currentQuestionIndex + 1, {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      ...(inputType === \"radio\" && { options: currentQuestion.options }),\n      ...(inputType === \"slider\" && {\n        value: sliderValue,\n        label: getSliderLabel(sliderValue),\n      }),\n      response: currentAnswer,\n    });\n    // Sync with quiz history store.\n    addHistoryEntry({\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      options: inputType === \"radio\" ? currentQuestion.options : undefined,\n      response: currentAnswer,\n    });\n    if (currentQuestionIndex >= staticQuestions.length) {\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: \"user\",\n          content: JSON.stringify({\n            question: currentQuestion.question,\n            options:\n              inputType === \"radio\" ? currentQuestion.options : undefined,\n            response: currentAnswer,\n          }),\n        },\n      ]);\n    }\n    const nextIndex = currentQuestionIndex + 1;\n    if (nextIndex < TOTAL_QUESTIONS) {\n      if (\n        nextIndex >= staticQuestions.length &&\n        nextIndex >= questions.length\n      ) {\n        await fetchNextDynamicQuestion();\n      }\n      setCurrentQuestionIndex(nextIndex);\n    } else {\n      router.push(\"/results\");\n    }\n  };\n\n  const handleFinishQuiz = () => {\n    triggerConfetti();\n    router.push(\"/results\");\n  };\n\n  const getCurrentAnswer = useCallback(() => {\n    switch (inputType) {\n      case \"radio\":\n        return selectedOption;\n      case \"slider\":\n        return getSliderLabel(sliderValue);\n      case \"text\":\n      default:\n        return textAnswer;\n    }\n  }, [inputType, selectedOption, sliderValue, textAnswer, getSliderLabel]);\n\n  const validateAnswer = useCallback(() => {\n    if (!currentQuestion) return false;\n    if (!isQuestionRequired) return true;\n    switch (inputType) {\n      case \"radio\":\n        if (!selectedOption) {\n          setValidationError(\"Please select an option to continue.\");\n          return false;\n        }\n        break;\n      case \"slider\":\n        if (sliderValue === null) {\n          setValidationError(\"Please select a value on the scale.\");\n          return false;\n        }\n        break;\n      case \"text\":\n      default:\n        if (!textAnswer.trim()) {\n          setValidationError(\"Please provide an answer to continue.\");\n          return false;\n        }\n        if (textAnswer.trim().length < 2) {\n          setValidationError(\n            \"Your answer is too short. Please provide more details.\"\n          );\n          return false;\n        }\n        break;\n    }\n    return true;\n  }, [\n    currentQuestion,\n    inputType,\n    selectedOption,\n    sliderValue,\n    textAnswer,\n    isQuestionRequired,\n  ]);\n\n  const formatTime = (seconds) => {\n    const sec = Number(seconds);\n    if (isNaN(sec)) return \"0:00\";\n    if (sec < 60) return `${sec}s`;\n    const minutes = Math.floor(sec / 60);\n    const remainingSeconds = sec % 60;\n    return `${minutes}:${remainingSeconds < 10 ? \"0\" : \"\"}${remainingSeconds}`;\n  };\n\n  const toggleHint = () => {\n    if (!showHint && currentQuestion?.hint) {\n      setHint(currentQuestion?.hint || \"No hint available for this question.\");\n    }\n    setShowHint(!showHint);\n  };\n\n  const triggerConfetti = () => {\n    if (typeof window !== \"undefined\" && confetti) {\n      const end = Date.now() + 1500;\n      const colors = [\"#4CAF50\", \"#2196F3\", \"#FFC107\", \"#9C27B0\"];\n      (function frame() {\n        confetti({\n          particleCount: 3,\n          angle: 60,\n          spread: 55,\n          origin: { x: 0 },\n          colors: colors,\n        });\n        confetti({\n          particleCount: 3,\n          angle: 120,\n          spread: 55,\n          origin: { x: 1 },\n          colors: colors,\n        });\n        if (Date.now() < end) {\n          requestAnimationFrame(frame);\n        }\n      })();\n    }\n  };\n\n  const renderQuestionInput = () => {\n    if (!currentQuestion) return null;\n    switch (inputType) {\n      case \"radio\":\n        return (\n          <RadioGroup\n            value={selectedOption}\n            onValueChange={(value) => {\n              setSelectedOption(value);\n              setValidationError(\"\");\n            }}\n            className=\"gap-3\"\n            orientation=\"vertical\"\n          >\n            {currentQuestion.options.map((option, index) => (\n              <Radio\n                key={index}\n                value={option}\n                description={\n                  option.includes(\" - \") ? option.split(\" - \")[1] : null\n                }\n                classNames={{\n                  base: \"border border-gray-200 rounded-lg p-3 hover:bg-gray-50 transition-transform duration-150 transform hover:scale-105\",\n                }}\n              >\n                {option.includes(\" - \") ? option.split(\" - \")[0] : option}\n              </Radio>\n            ))}\n          </RadioGroup>\n        );\n      case \"slider\":\n        return (\n          <div className=\"w-full\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-700\">\n                {currentQuestion.labelMapping?.[0]?.label || \"Min\"}\n              </span>\n              <span className=\"text-lg font-bold text-primary\">\n                {sliderValue !== null ? getSliderLabel(sliderValue) : \"-\"}\n              </span>\n              <span className=\"text-sm font-medium text-gray-700\">\n                {currentQuestion.labelMapping?.[\n                  currentQuestion.labelMapping.length - 1\n                ]?.label || \"Max\"}\n              </span>\n            </div>\n            <Slider\n              aria-labelledby={`question-${currentQuestionIndex + 1}`}\n              step={currentQuestion.step || 1}\n              min={currentQuestion.min || 1}\n              max={currentQuestion.max || 100}\n              defaultValue={currentQuestion.defaultValue || 50}\n              value={sliderValue}\n              onChange={(value) => {\n                setSliderValue(value);\n                setValidationError(\"\");\n              }}\n              className=\"w-full\"\n              color={sectionColor}\n              size=\"lg\"\n              classNames={{\n                base: \"w-full\",\n                track: \"h-2 bg-gray-300 rounded-full\",\n                indicator:\n                  \"rounded-full bg-gradient-to-r from-blue-500 to-blue-700\",\n                thumb:\n                  \"w-6 h-6 shadow-lg active:scale-125 transition-transform duration-200 bg-current\",\n              }}\n            />\n            {renderSliderLabels()}\n          </div>\n        );\n      case \"text\":\n      default:\n        return (\n          <Textarea\n            aria-labelledby={`question-${currentQuestionIndex + 1}`}\n            placeholder={\n              currentQuestion.placeholder || \"Type your answer here...\"\n            }\n            value={textAnswer}\n            onChange={(e) => {\n              setTextAnswer(e.target.value);\n              setValidationError(\"\");\n            }}\n            minRows={5}\n            maxRows={10}\n            className=\"w-full\"\n            classNames={{\n              input:\n                \"resize-y focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200\",\n              base: \"border-gray-300 hover:border-gray-400 transition-colors duration-200\",\n            }}\n          />\n        );\n    }\n  };\n\n  if (loading || loadingNextQuestion) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-gray-50 to-blue-100 p-6\">\n        <div className=\"text-center bg-white p-8 rounded-xl shadow-lg transform transition-all duration-500 hover:shadow-2xl\">\n          <Spinner color=\"primary\" size=\"lg\" />\n          <p className=\"mt-4 text-lg font-medium text-gray-700 animate-pulse\">\n            {loadingNextQuestion\n              ? \"Loading your next question...\"\n              : \"Preparing the quiz...\"}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-gray-50 to-blue-100 p-6\">\n        <Card className=\"max-w-md w-full shadow-xl transform transition-all duration-500 hover:scale-105\">\n          <CardHeader className=\"flex flex-col gap-1 items-center bg-red-50 text-red-700 border-b border-red-200\">\n            <AlertCircle size={40} className=\"text-red-600\" />\n            <h2 className=\"text-xl font-bold mt-2\">Error Occurred</h2>\n          </CardHeader>\n          <CardBody className=\"text-center py-6\">\n            <p className=\"mb-4 text-gray-800\">{error}</p>\n            <Button\n              color=\"primary\"\n              onPress={() => setError(null)}\n              startContent={<RefreshCw size={18} />}\n              className=\"bg-gradient-to-r from-blue-600 to-blue-800 shadow-md hover:shadow-lg transition-all duration-200\"\n            >\n              Try Again\n            </Button>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-gray-50 to-blue-100 p-6 pb-12\">\n      <header className=\"w-full max-w-3xl mb-8 text-center\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              Crayon Gen-AI Internship Test\n            </h1>\n            <p className=\"text-gray-600\">Test your skills and understanding.</p>\n          </div>\n          <Button\n            color=\"danger\"\n            variant=\"flat\"\n            size=\"sm\"\n            onPress={() => {\n              clearStore();\n              window.location.reload();\n            }}\n          >\n            Clear Storage\n          </Button>\n        </div>\n      </header>\n\n      <div className=\"w-full max-w-3xl mb-6\">\n        <div className=\"flex justify-between items-center mb-3\">\n          <span className=\"text-sm font-medium text-gray-700\">\n            Progress: {Math.round(progressPercentage)}%\n          </span>\n          <span className=\"text-sm font-medium text-gray-700\">\n            Question {currentQuestionIndex + 1} of {TOTAL_QUESTIONS}\n          </span>\n        </div>\n        <Progress\n          value={progressPercentage}\n          color={sectionColor}\n          size=\"md\"\n          radius=\"full\"\n          showValueLabel={false}\n          aria-label=\"Quiz progress\"\n          className=\"h-2\"\n          classNames={{\n            track: \"rounded-full bg-gray-200\",\n            indicator: `rounded-full bg-gradient-to-r from-${sectionColor}-500 to-${sectionColor}-700`,\n          }}\n        />\n      </div>\n\n      <Card className=\"max-w-3xl w-full bg-white shadow-xl rounded-xl overflow-hidden border border-gray-200\">\n        <CardHeader className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center border-b border-gray-200 bg-gray-50 px-6 py-5\">\n          <div className=\"flex items-center gap-3 mb-2 sm:mb-0\">\n            <Chip\n              color={sectionColor}\n              variant=\"flat\"\n              radius=\"sm\"\n              size=\"md\"\n              className=\"font-semibold\"\n              startContent={\n                <SectionIcon section={currentQuestion?.section} size={20} />\n              }\n            >\n              {currentQuestion?.section || \"Question\"}\n            </Chip>\n          </div>\n          <div\n            className=\"flex items-center gap-2 text-gray-600\"\n            title=\"Time remaining to answer this question\"\n          >\n            <Clock\n              size={18}\n              className={isTimerWarning ? \"text-red-500 animate-pulse\" : \"\"}\n            />\n            <span\n              className={`font-mono text-sm ${\n                isTimerWarning ? \"text-red-500 animate-pulse\" : \"\"\n              }`}\n            >\n              {formatTime(timer)}\n            </span>\n          </div>\n        </CardHeader>\n        <CardBody className=\"py-6 px-6\">\n          <motion.h3\n            layout\n            className=\"text-xl sm:text-2xl font-semibold text-gray-900 mb-5\"\n          >\n            {currentQuestion?.question}\n          </motion.h3>\n          {validationError && (\n            <motion.div\n              layout\n              className=\"mb-5 p-4 bg-red-50 text-red-700 rounded-md flex items-center gap-2 border border-red-200\"\n              initial={{ opacity: 0, y: -10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AlertCircle size={18} />\n              <span>{validationError}</span>\n            </motion.div>\n          )}\n          <motion.div layout>{renderQuestionInput()}</motion.div>\n          {currentQuestion?.hint && (\n            <div className=\"mt-6\">\n              <Tooltip\n                content={<div className=\"text-sm\">{hint}</div>}\n                placement=\"bottom\"\n              >\n                <Button\n                  size=\"sm\"\n                  color=\"warning\"\n                  variant=\"flat\"\n                  isIconOnly\n                  aria-label=\"Show hint\"\n                  className=\"min-w-[40px] h-[40px] p-0\"\n                  onPress={toggleHint}\n                >\n                  <HelpCircle size={20} />\n                </Button>\n              </Tooltip>\n            </div>\n          )}\n        </CardBody>\n        <CardFooter className=\"flex flex-col sm:flex-row justify-between border-t border-gray-200 px-6 py-5\">\n          <div\n            className=\"flex items-center text-sm text-gray-500\"\n            title=\"Enter a thoughtful response before continuing\"\n          >\n            <div className=\"flex items-center gap-1\">\n              <Info size={16} />\n              <span>\n                {isLastQuestion\n                  ? \"This is the final question\"\n                  : \"Answer thoughtfully\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex gap-3 mt-3 sm:mt-0\">\n            <Button\n              color=\"primary\"\n              endContent={\n                isLastQuestion ? (\n                  <ListChecks size={18} />\n                ) : (\n                  <ArrowRight size={18} />\n                )\n              }\n              onPress={() => handleNextQuestion()}\n              isDisabled={\n                isQuestionRequired &&\n                ((inputType === \"radio\" && !selectedOption) ||\n                  (inputType === \"text\" && !textAnswer.trim()) ||\n                  (inputType === \"slider\" && sliderValue === null))\n              }\n              size=\"lg\"\n            >\n              {isLastQuestion ? \"Review & Finish\" : \"Next Question\"}\n            </Button>\n          </div>\n        </CardFooter>\n      </Card>\n\n      <Modal\n        isOpen={showReviewModal}\n        onClose={() => setShowReviewModal(false)}\n        size=\"lg\"\n        scrollBehavior=\"inside\"\n        className=\"bg-white rounded-xl shadow-2xl\"\n        backdrop=\"blur\"\n      >\n        <ModalContent>\n          <ModalHeader className=\"flex flex-col gap-1\">\n            <h3 className=\"text-xl font-semibold text-center\">\n              Review Your Answers\n            </h3>\n            <p className=\"text-sm text-gray-600 text-center\">\n              Please review your responses before submitting the quiz.\n            </p>\n          </ModalHeader>\n          <ModalBody className=\"px-6 py-4\">\n            {questions.map((q, index) => (\n              <div\n                key={index}\n                className=\"mb-6 p-4 rounded-lg border border-gray-200\"\n              >\n                <h4 className=\"text-lg font-semibold\">{`Q${index + 1}: ${\n                  q.question\n                }`}</h4>\n                <p className=\"mt-2 text-gray-700\">\n                  {quizData[index + 1]\n                    ? quizData[index + 1].response\n                    : \"No answer provided\"}\n                </p>\n              </div>\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onPress={handleFinishQuiz}>\n              Submit Quiz\n            </Button>\n            <Button\n              variant=\"flat\"\n              color=\"secondary\"\n              onPress={() => setShowReviewModal(false)}\n            >\n              Edit Answers\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}